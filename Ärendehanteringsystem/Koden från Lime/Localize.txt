Option Explicit

Private m_LanguageCode As String
Private dicLookup As Scripting.Dictionary
Private Const LOCALIZE_SEPARATOR As String = "$$"

Public Sub SetLanguage(ByVal strLanguageCode As String)
    On Error GoTo ErrorHandler
    
    Select Case strLanguageCode
        Case "sv":
            m_LanguageCode = strLanguageCode
        Case "en-us":
            m_LanguageCode = "en_us"
        Case "no":
            m_LanguageCode = "no"
        Case "fi":
            m_LanguageCode = "fi"
        Case Else
            Call Err.Raise(123, "Localize.SetLanguage", "The languages that are supported are ""sv"" and ""en_us"".")
    End Select
    
    Call LoadDictionary
    
    Exit Sub
ErrorHandler:
    Call UI.ShowError("Localize.SetLanguage")
End Sub

Private Sub LoadDictionary()
    On Error GoTo ErrorHandler:
    Dim oRecord As LDE.Record
    Dim oRecords As New LDE.Records
                
    Set dicLookup = New Scripting.Dictionary
    dicLookup.CompareMode = TextCompare
    
    'Get all records
    Call oRecords.Open(Database.Classes("localize"))
    
    For Each oRecord In oRecords
        If VBA.Len(VBA.Trim(oRecord.Value(m_LanguageCode))) > 0 Then
            If dicLookup.Exists(GetLookupKey(oRecord.Value("owner"), oRecord.Value("code"))) = False Then
                Call dicLookup.Add(GetLookupKey(oRecord.Value("owner"), oRecord.Value("code")), oRecord.Value(m_LanguageCode))
            End If
        End If
    Next oRecord
    
    
    Exit Sub
ErrorHandler:
    Call UI.ShowError("Localize.LoadDictionary")
End Sub

Public Function GetText(ByVal strOwner As String, ByVal strCode As String) As String
    On Error GoTo ErrorHandler
    Dim strLookupKey As String
    
    strLookupKey = GetLookupKey(strOwner, strCode)
    
    'Check to see that the dictionary is initialized
    If dicLookup Is Nothing Then
        Call Localize.SetLanguage(Application.Locale)
    End If
    
    If dicLookup.Exists(strLookupKey) Then
        GetText = dicLookup.Item(strLookupKey)
    Else
        GetText = "ERROR! String not found."
    End If
    
    Exit Function
ErrorHandler:
    Call UI.ShowError("Localize.GetText")
End Function

Private Function GetLookupKey(ByVal strOwner As String, ByVal strCode As String) As String
    On Error GoTo ErrorHandler
    
    GetLookupKey = strOwner + LOCALIZE_SEPARATOR + strCode
    
    Exit Function
ErrorHandler:
    Call UI.ShowError("Localize.LoadDictionary")
End Function
