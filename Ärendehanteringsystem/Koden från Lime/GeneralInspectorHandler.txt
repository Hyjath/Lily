Option Explicit

    Private WithEvents m_Application As Lime.Application
    
    Private m_InspectorHandlerTodo As InspectorHandlerTodo
    Private m_InspectorHandlerHelpdesk As InspectorHandlerHelpdesk
        

Private Sub Class_Initialize()
    On Error GoTo ErrorHandler
    Set m_Application = Application
    
    'Kör vi uppstart
    Call m_Application_AfterActiveInspectorChanged
    
    Exit Sub
ErrorHandler:
    Call UI.ShowError("GeneralControlsHandler.Class_Initialize")
End Sub

Private Sub Class_Terminate()
    On Error GoTo ErrorHandler
    Set m_Application = Nothing
    
    Exit Sub
ErrorHandler:
    Call UI.ShowError("GeneralControlsHandler.Class_Terminate")
End Sub


Private Sub m_Application_AfterActiveInspectorChanged()
    On Error GoTo ErrorHandler
    
    Dim oInspector As Lime.Inspector
    
    If Not m_Application.ActiveInspector Is Nothing Then
        Set oInspector = m_Application.ActiveInspector
        
        Select Case oInspector.Class.Name
            Case "todo":
                Set m_InspectorHandlerTodo = New InspectorHandlerTodo
            Case "helpdesk"
                Set m_InspectorHandlerHelpdesk = New InspectorHandlerHelpdesk
        End Select
    End If
    
    Exit Sub
ErrorHandler:
    Call UI.ShowError("GeneralInspectorHandler.m_Application_AfterActiveInspectorChanged")
End Sub

