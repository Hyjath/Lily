Option Explicit
    
    Private WithEvents m_Controls As Lime.Controls
    Private WithEvents m_Inspector As Lime.Inspector
    
Private Sub Class_Initialize()
    On Error GoTo ErrorHandler
    Set m_Inspector = Application.ActiveInspector
    
    Set m_Controls = m_Inspector.Controls
    
    If Not m_Controls Is Nothing Then
        Call m_Controls.SetRequired("subject", True)
    End If
    
    Exit Sub
ErrorHandler:
    Call UI.ShowError("InspectorHandlerTodo.Class_Initialize")
End Sub

Private Sub m_Controls_AfterCommand(ByVal Control As IControl, ByVal Command As ControlCommandEnum, ByVal Params As LDE.IProperties)
    On Error GoTo ErrorHandler
    
    If Not Control Is Nothing Then
        Select Case Control.Field.Name
            Case "done":
                If Command = lkControlCommandValueChanged Then
                    Call RefreshActionpad
                End If
            Case "person"
                If Command = lkControlCommandValueChanged Or Command = lkControlCommandLink Or Command = lkControlCommandUnlink Then
                    Call RefreshActionpad
                End If
        End Select
    End If
    
    Exit Sub
ErrorHandler:
    Call UI.ShowError("InspectorHandlerTodo.m_Controls_AfterCommand")
End Sub


Private Sub m_Inspector_AfterRecordChanged()
    On Error GoTo ErrorHandler
    
    Call RefreshActionpad
    
    Exit Sub
ErrorHandler:
    Call UI.ShowError("InspectorHandlerTodo.m_Inspector_AfterRecordChanged")
End Sub

Private Sub RefreshActionpad()
    On Error GoTo ErrorHandler
    
    If Not m_Inspector Is Nothing Then
        Call m_Inspector.WebBar.Refresh
    End If

    Exit Sub
ErrorHandler:
    Call UI.ShowError("InspectorHandlerTodo.RefreshActionpad")
End Sub
