Option Explicit

    Private WithEvents m_Application As Lime.Application
    
    Private m_ControlsHandlerTemplate As ControlsHandlerTemplate
    Private m_ControlsHandlerBusiness As ControlsHandlerBusiness
    Private m_ControlsHandlerDocument As ControlsHandlerDocument
    Private m_ControlsHandlerHelpdesk As ControlsHandlerHelpdesk
    'Private m_ControlsHandlerCompany As ControlsHandlerCompany
    Private m_ControlsHandlerWhiteboard As ControlsHandlerWhiteboard
    Private m_ControlsHandlerAOHeating As ControlsHandlerAOHeating
    Private m_ControlsHandlerAOElectricity As ControlsHandlerAOElectricity
    

Private Sub Class_Initialize()
    On Error GoTo ErrorHandler
    Set m_Application = Application
    
    'Kör vi uppstart
    Call m_Application_AfterActiveControlsChanged
    
    Exit Sub
ErrorHandler:
    Call UI.ShowError("GeneralControlsHandler.Class_Initialize")
End Sub

Private Sub Class_Terminate()
    On Error GoTo ErrorHandler
    Set m_Application = Nothing
    Exit Sub
ErrorHandler:
    Call UI.ShowError("GeneralControlsHandler.Class_Terminate")
End Sub

Private Sub m_Application_AfterActiveControlsChanged()
    On Error GoTo ErrorHandler
    
    If Not m_Application.ActiveControls Is Nothing Then
        Select Case m_Application.ActiveControls.Class.Name
'            Case "template":
'                Set m_ControlsHandlerTemplate = New ControlsHandlerTemplate
            Case "business"
                Set m_ControlsHandlerBusiness = New ControlsHandlerBusiness
            Case "todo"
                If (m_Application.ActiveControls.State And lkControlsStateNew) = lkControlsStateNew And CustomSettings.RELATION_AUTORELATEALL_TODO Then
                    Call Globals.AutoRelateAll(m_Application.ActiveControls)
                End If
            Case "history"
                If (m_Application.ActiveControls.State And lkControlsStateNew) = lkControlsStateNew And CustomSettings.RELATION_AUTORELATEALL_HISTORY Then
                    Call Globals.AutoRelateAll(m_Application.ActiveControls)
                End If


            Case "document"
                If (m_Application.ActiveControls.State And lkControlsStateNew) = lkControlsStateNew And CustomSettings.RELATION_AUTORELATEALL_DOCUMENT Then
                    Call Globals.AutoRelateAll(m_Application.ActiveControls)
                End If
            
                Set m_ControlsHandlerDocument = New ControlsHandlerDocument
            Case "company"
                'Set m_ControlsHandlerCompany = New ControlsHandlerCompany
            Case "helpdesk"
                Set m_ControlsHandlerHelpdesk = New ControlsHandlerHelpdesk
            Case "whiteboard"
                Set m_ControlsHandlerWhiteboard = New ControlsHandlerWhiteboard
            Case "aoheating"
                Set m_ControlsHandlerAOHeating = New ControlsHandlerAOHeating
            Case "aoelectricity"
                Set m_ControlsHandlerAOElectricity = New ControlsHandlerAOElectricity
        End Select
    End If
    
    Exit Sub
ErrorHandler:
    Call UI.ShowError("GeneralControlsHandler.m_Application_AfterActiveControlsChanged")
End Sub


